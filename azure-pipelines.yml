# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

variables:
- group: VsCodeDeploy

trigger:
  branches:
    include:
      - dev
      - master

pr:
  branches:
    include:
      - dev

jobs:
  - job: PackageVsix
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
    pool:
      vmImage: 'vs2017-win2016'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '8.x'
        displayName: 'Install Node.js'
      - script: |
          npm install
        displayName: 'npm install'
      - task: PowerShell@2
        inputs:
          targetType: inline
          script: '. .\buildfunctions.ps1; $v = addBuildNumber -buildNumber $(Build.BuildNumber);write-host "##vso[task.setvariable variable=vsix]cn-$v.vsix"' # Required when targetType == Inline
      - task: Bash@3
        inputs:
          targetType: inline
          script: 'npm install -g vsce && vsce package' # Required when targetType == Inline
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: "$(vsix)"
          targetPath: "./$(vsix)"
    #Not complete yet
  - job: PublishMarketPlace 
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    pool:
      vmImage: 'vs2017-win2016'
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '8.x'
        displayName: 'Install Node.js'
      - script: |
          npm install
        displayName: 'npm install'
      #- task: PowerShell@2
      #  inputs:
      #    targetType: inline
      #    script: '. .\buildfunctions.ps1; $v = addBuildNumber -buildNumber $(Build.BuildId);write-host "##vso[task.setvariable variable=vsix]cn-$v.vsix"' # Required when targetType == Inline
      - task: Bash@3
        inputs:
          targetType: inline
          script: 'npm install -g vsce && vsce publish minor -p $(ambsKey)' # Required when targetType == Inline
# - script: |
#     npm install -g vsce
#     vsce package -o ".\$(vsix)"
#   displayName: 'Package'

#publish vsix
